// Bipropellant
@PART:HAS[~chemTechTankType,!RESOURCE[LiquidFuel],!RESOURCE[LqdHydrogen],!RESOURCE[LqdMethane],!RESOURCE[Oxidizer],@MODULE[ModuleTankManager]:HAS[@TANK[LFO]]]:NEEDS[ConfigurableContainers]:BEFORE[zz_ChemicalPropulsion]
{
	// ModuleTankManager pure LFO tank
	chemTechTankType = bipropellant
}
@PART:HAS[!RESOURCE[LiquidFuel],!RESOURCE[LqdHydrogen],!RESOURCE[LqdMethane],!RESOURCE[Oxidizer],@MODULE[ModuleTankManager]:HAS[@TANK[LFO]]]:NEEDS[ConfigurableContainers]:FOR[zz_ChemicalPropulsion]
{
	// Any part with a ModuleTankManager LFO tank
	chemTechTankVolumeFuelOxidizer = #$MODULE[ModuleTankManager]:HAS[@TANK[LFO]]/Volume$
	@chemTechTankVolumeFuelOxidizer *= #$MODULE[ModuleTankManager]:HAS[@TANK[LFO]]/TANK[LFO]/Volume$
	@chemTechTankVolumeFuelOxidizer *= 8.1 // 162 * 5 / 100
}

// Aviation
@PART:HAS[~chemTechTankType,!RESOURCE[LiquidFuel],@MODULE[ModuleTankManager]:HAS[@TANK:HAS[#TankType[LiquidChemicals],#CurrentResource[LiquidFuel]]]]:NEEDS[ConfigurableContainers]:BEFORE[zz_ChemicalPropulsion]
{
	// ModuleTankManager pure LiquidFuel tank
	chemTechTankType = aviation
}
@PART:HAS[!RESOURCE[LiquidFuel],@MODULE[ModuleTankManager]:HAS[@TANK:HAS[#TankType[LiquidChemicals],#CurrentResource[LiquidFuel]]]]:NEEDS[ConfigurableContainers]:FOR[zz_ChemicalPropulsion]
{
	// Any part with a ModuleTankManager LiquidFuel tank
	chemTechTankVolumeFuelOxidizer = #$MODULE[ModuleTankManager]:HAS[@TANK:HAS[#TankType[LiquidChemicals],#CurrentResource[LiquidFuel]]]/Volume$
	@chemTechTankVolumeFuelOxidizer *= #$MODULE[ModuleTankManager]:HAS[@TANK:HAS[#TankType[LiquidChemicals],#CurrentResource[LiquidFuel]]]/TANK:HAS[#TankType[LiquidChemicals],#CurrentResource[LiquidFuel]]/Volume$
	@chemTechTankVolumeFuelOxidizer *= 8.1 // 162 * 5 / 100
}

// Cryogenic
@PART:HAS[~chemTechTankType,!RESOURCE[LqdHydrogen],@MODULE[ModuleTankManager]:HAS[@TANK:HAS[#TankType[LiquidChemicals],#CurrentResource[LqdHydrogen]]]]:NEEDS[ConfigurableContainers]:BEFORE[zz_ChemicalPropulsion]
{
	// ModuleTankManager pure LqdHydrogen tank
	chemTechTankType = aviation
}
@PART:HAS[!RESOURCE[LqdHydrogen],@MODULE[ModuleTankManager]:HAS[@TANK:HAS[#TankType[LiquidChemicals],#CurrentResource[LqdHydrogen]]]]:NEEDS[ConfigurableContainers]:FOR[zz_ChemicalPropulsion]
{
	// Any part with a ModuleTankManager LqdHydrogen tank
	chemTechTankVolumeFuelOxidizer = #$MODULE[ModuleTankManager]:HAS[@TANK:HAS[#TankType[LiquidChemicals],#CurrentResource[LqdHydrogen]]]/Volume$
	@chemTechTankVolumeFuelOxidizer *= #$MODULE[ModuleTankManager]:HAS[@TANK:HAS[#TankType[LiquidChemicals],#CurrentResource[LqdHydrogen]]]/TANK:HAS[#TankType[LiquidChemicals],#CurrentResource[LqdHydrogen]]/Volume$
	@chemTechTankVolumeFuelOxidizer *= 1.08 // 162 / 1.5 / 100
}

// Monopropellant
@PART:HAS[~chemTechTankType,!RESOURCE[MonoPropellant],@MODULE[ModuleTankManager]:HAS[@TANK:HAS[#TankType[LiquidChemicals],#CurrentResource[MonoPropellant]]]]:NEEDS[ConfigurableContainers]:BEFORE[zz_ChemicalPropulsion]
{
	// ModuleTankManager pure MonoPropellant tank
	chemTechTankType = monopropellant
}
@PART:HAS[!RESOURCE[MonoPropellant],@MODULE[ModuleTankManager]:HAS[@TANK:HAS[#TankType[LiquidChemicals],#CurrentResource[MonoPropellant]]]]:NEEDS[ConfigurableContainers]:FOR[zz_ChemicalPropulsion]
{
	// Any part with a ModuleTankManager MonoPropellant tank
	chemTechTankVolumePropellant = #$MODULE[ModuleTankManager]:HAS[@TANK:HAS[#TankType[LiquidChemicals],#CurrentResource[MonoPropellant]]]/Volume$
	@chemTechTankVolumePropellant *= #$MODULE[ModuleTankManager]:HAS[@TANK:HAS[#TankType[LiquidChemicals],#CurrentResource[MonoPropellant]]]/TANK:HAS[#TankType[LiquidChemicals],#CurrentResource[MonoPropellant]]/Volume$
	@chemTechTankVolumePropellant *= 14.72 // 368 * 4 / 100
}

// Remove any clashing ModuleTankManager
@PART:HAS[#chemTechVolume*,@MODULE[ModuleTankManager]]:FOR[zzz_ChemicalPropulsion]
{
	-MODULE[ModuleTankManager] {}
}