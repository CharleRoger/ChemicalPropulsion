// Remove redundant modules
@PART:HAS[@MODULE[ModuleResourceConverter]:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]],@MODULE[ModuleResourceConverter]:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LqdHydrogen]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]]]:BEFORE[zz_ChemicalPropulsion]
{
	-MODULE[ModuleResourceConverter]:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]] {}
}
@PART:HAS[@MODULE[ModuleResourceConverter]:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]],@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[@MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]]]]]]:BEFORE[zz_ChemicalPropulsion]
{
	-MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[@MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]]]]] {}
}
@PART:HAS[@MODULE[ModuleResourceConverter]:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[IntakeAir]]],@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[@MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[IntakeAir]]]]]]]:BEFORE[zz_ChemicalPropulsion]
{
	-MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[@MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[IntakeAir]]]]]] {}
}
@PART:HAS[@MODULE[ModuleResourceConverter]:HAS[@INPUT_RESOURCE:HAS[#ResourceName[MonoPropellant]]],@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[@MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[MonoPropellant]]]]]]]:BEFORE[zz_ChemicalPropulsion]
{
	-MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[@MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[MonoPropellant]]]]]] {}
}


// Extract fuel cell ratios

// LiquidFuel + Oxidizer
@PART:HAS[@MODULE[ModuleResourceConverter]:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]],@OUTPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]]]:FOR[zz_ChemicalPropulsion]
{
	%chemTechRatioLiquidFuel = #$MODULE[ModuleResourceConverter]:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]],@OUTPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]]/INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]/Ratio$
	%chemTechRatioOxidizer = #$MODULE[ModuleResourceConverter]:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]],@OUTPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]]/INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]/Ratio$
}
@PART:HAS[@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[@MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]]]]]]:FOR[zz_ChemicalPropulsion]
{
	%chemTechRatioLiquidFuel = #$MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[@MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]]]]]/SUBTYPE:HAS[@MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]]]]/MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]]]/DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]]/INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]/Ratio$
	%chemTechRatioOxidizer = #$MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[@MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]]]]]/SUBTYPE:HAS[@MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]]]]/MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]]]/DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]]/INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]/Ratio$
}

// LqdHydrogen + Oxidizer
@PART:HAS[@MODULE[ModuleResourceConverter]:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LqdHydrogen]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]],@OUTPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]]]:FOR[zz_ChemicalPropulsion]
{
	%chemTechRatioLqdHydrogen = #$MODULE[ModuleResourceConverter]:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LqdHydrogen]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]],@OUTPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]]/INPUT_RESOURCE:HAS[#ResourceName[LqdHydrogen]]/Ratio$
	%chemTechRatioOxidizer = #$MODULE[ModuleResourceConverter]:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LqdHydrogen]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]],@OUTPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]]/INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]/Ratio$
}
@PART:HAS[@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[@MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LqdHydrogen]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]]]]]]:FOR[zz_ChemicalPropulsion]
{
	%chemTechRatioLqdHydrogen = #$MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[@MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LqdHydrogen]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]]]]]/SUBTYPE:HAS[@MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LqdHydrogen]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]]]]/MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LqdHydrogen]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]]]/DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LqdHydrogen]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]]/INPUT_RESOURCE:HAS[#ResourceName[LqdHydrogen]]/Ratio$
	%chemTechRatioOxidizer = #$MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[@MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LqdHydrogen]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]]]]]/SUBTYPE:HAS[@MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LqdHydrogen]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]]]]/MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LqdHydrogen]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]]]/DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LqdHydrogen]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]]/INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]/Ratio$
}

// LiquidFuel + IntakeAir
@PART:HAS[@MODULE[ModuleResourceConverter]:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[IntakeAir]],@OUTPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]]]:FOR[zz_ChemicalPropulsion]
{
	%chemTechRatioLiquidFuel = #$MODULE[ModuleResourceConverter]:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[IntakeAir]],@OUTPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]]/INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]/Ratio$
	%chemTechRatioIntakeAir = #$MODULE[ModuleResourceConverter]:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[IntakeAir]],@OUTPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]]/INPUT_RESOURCE:HAS[#ResourceName[IntakeAir]]/Ratio$
}
@PART:HAS[@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[@MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[IntakeAir]]]]]]]:FOR[zz_ChemicalPropulsion]
{
	%chemTechRatioLiquidFuel = #$MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[@MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[IntakeAir]]]]]]/SUBTYPE:HAS[@MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[IntakeAir]]]]]/MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[IntakeAir]]]]/DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[IntakeAir]]]/INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]/Ratio$
	%chemTechRatioIntakeAir = #$MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[@MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[IntakeAir]]]]]]/SUBTYPE:HAS[@MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[IntakeAir]]]]]/MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[IntakeAir]]]]/DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[IntakeAir]]]/INPUT_RESOURCE:HAS[#ResourceName[IntakeAir]]/Ratio$
}

// MonoPropellant
@PART:HAS[@MODULE[ModuleResourceConverter]:HAS[@INPUT_RESOURCE:HAS[#ResourceName[MonoPropellant]],@OUTPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]]]:FOR[zz_ChemicalPropulsion]
{
	%chemTechRatioMonoPropellant = #$MODULE[ModuleResourceConverter]:HAS[@INPUT_RESOURCE:HAS[#ResourceName[MonoPropellant]],@OUTPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]]/INPUT_RESOURCE:HAS[#ResourceName[MonoPropellant]]/Ratio$
}
@PART:HAS[@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[@MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[MonoPropellant]]]]]]]:FOR[zz_ChemicalPropulsion]
{
	%chemTechRatioMonoPropellant = #$MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[@MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[MonoPropellant]]]]]]/SUBTYPE:HAS[@MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[MonoPropellant]]]]]/MODULE:HAS[@IDENTIFIER[ModuleResourceConverter],@DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[MonoPropellant]]]]/DATA:HAS[@INPUT_RESOURCE:HAS[#ResourceName[MonoPropellant]]]/INPUT_RESOURCE:HAS[#ResourceName[MonoPropellant]]/Ratio$
}

// Compute total rate
@PART:HAS[#chemTechRatioLiquidFuel]:FOR[zz_ChemicalPropulsion]
{
	@chemTechRatioLiquidFuel *= 5
	chemTechRatio = #$chemTechRatioLiquidFuel$
}
@PART:HAS[#chemTechRatioLqdHydrogen]:FOR[zz_ChemicalPropulsion]
{
	chemTechRatio = #$chemTechRatioLqdHydrogen$
}
@PART:HAS[#chemTechRatioOxidizer]:FOR[zz_ChemicalPropulsion]
{
	@chemTechRatioOxidizer *= 5
	@chemTechRatio += #$chemTechRatioOxidizer$
}
@PART:HAS[#chemTechRatioMonoPropellant]:FOR[zz_ChemicalPropulsion]
{
	@chemTechRatioMonoPropellant *= 4
	chemTechRatio = #$chemTechRatioMonoPropellant$
}


// Apply new resources to fuel cells

// Hydrogen combustion
@PART:HAS[#chemTechRatioOxidizer,!MODULE[ModuleRCS*]:HAS[#chemTechFuel[Hydrazine],#chemTechOxidizer[NTO]]]:BEFORE[zzz_ChemicalPropulsion]
{
	@MODULE[ModuleResourceConverter]:HAS[@OUTPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]]
	{
		@ConverterName = #LOC_ChemicalPropulsion_FuelCell_LqdHydrogen_LqdOxygen_ConverterName
		@StartActionName = #LOC_ChemicalPropulsion_FuelCell_LqdHydrogen_LqdOxygen_StartActionName
		@StopActionName = #LOC_ChemicalPropulsion_FuelCell_LqdHydrogen_LqdOxygen_StopActionName
		@ToggleActionName = #LOC_ChemicalPropulsion_FuelCell_LqdHydrogen_LqdOxygen_ToggleActionName

		-INPUT_RESOURCE,* {}
		INPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = #$../../chemTechRatio$
			@Ratio *= 0.75
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdOxygen
			Ratio = #$../../chemTechRatio$
			@Ratio *= 0.25
		}
	}
	-MODULE[ModuleResourceConverter]:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LqdHydrogen]],@INPUT_RESOURCE:HAS[#ResourceName[Oxidizer]],@OUTPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]],* {}
}

// Hypergolic RCS integrated fuel cell (e.g. Near Future Launch Vehicles)
@PART:HAS[#chemTechRatioLiquidFuel,#chemTechRatioOxidizer,@MODULE[ModuleRCS*]:HAS[#chemTechFuel[Hydrazine],#chemTechOxidizer[NTO]]]:BEFORE[zzz_ChemicalPropulsion]
{
	@MODULE[ModuleResourceConverter]:HAS[@OUTPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]]
	{
		@ConverterName = #LOC_ChemicalPropulsion_FuelCell_Hydrazine_NTO_ConverterName
		@StartActionName = #LOC_ChemicalPropulsion_FuelCell_Hydrazine_NTO_StartActionName
		@StopActionName = #LOC_ChemicalPropulsion_FuelCell_Hydrazine_NTO_StopActionName
		@ToggleActionName = #LOC_ChemicalPropulsion_FuelCell_Hydrazine_NTO_ToggleActionName
		
		-INPUT_RESOURCE,* {}
		INPUT_RESOURCE
		{
			ResourceName = Hydrazine
			Ratio = #$../../chemTechRatio$
			@Ratio *= 0.4375
		}
		INPUT_RESOURCE
		{
			ResourceName = NTO
			Ratio = #$../../chemTechRatio$
			@Ratio *= 0.5625
		}
	}
}

// Hydrazine decomposition
@PART:HAS[#chemTechRatioMonoPropellant]:BEFORE[zzz_ChemicalPropulsion]
{
	@title ^= : Monopropellant : Hydrazine :
	@description ^= : Monopropellant : Hydrazine :
	@MODULE[ModuleResourceConverter]:HAS[@OUTPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]]
	{
		@ConverterName = #LOC_ChemicalPropulsion_FuelCell_Hydrazine_LqdOxygen_ConverterName
		@StartActionName = #LOC_ChemicalPropulsion_FuelCell_Hydrazine_StartActionName
		@StopActionName = #LOC_ChemicalPropulsion_FuelCell_Hydrazine_StopActionName
		@ToggleActionName = #LOC_ChemicalPropulsion_FuelCell_Hydrazine_ToggleActionName
		
		-INPUT_RESOURCE,* {}
		INPUT_RESOURCE
		{
			ResourceName = Hydrazine
			Ratio = #$../../chemTechRatio$
		}
	}
}

// Kerosene air combustion (e.g. Grounded)
@PART:HAS[#chemTechRatioLiquidFuel,#chemTechRatioIntakeAir]:BEFORE[zzz_ChemicalPropulsion]
{
	@MODULE[ModuleResourceConverter]:HAS[@INPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@INPUT_RESOURCE:HAS[#ResourceName[IntakeAir]],@OUTPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]]
	{
		@ConverterName = #LOC_ChemicalPropulsion_FuelCell_Kerosene_IntakeAir_ConverterName
		@StartActionName = #LOC_ChemicalPropulsion_FuelCell_Kerosene_IntakeAir_StartActionName
		@StopActionName = #LOC_ChemicalPropulsion_FuelCell_Kerosene_IntakeAir_StopActionName
		@ToggleActionName = #LOC_ChemicalPropulsion_FuelCell_Kerosene_IntakeAir_ToggleActionName
		
		-INPUT_RESOURCE,* {}
		INPUT_RESOURCE
		{
			ResourceName = Kerosene
			Ratio = #$../../chemTechRatio$
		}
		INPUT_RESOURCE
		{
			ResourceName = IntakeAir
			Ratio = #$../../chemTechRatioIntakeAir$
		}
	}
}